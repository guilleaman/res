Farejador - API de Busca e Transformação de CPF
A API Farejador permite buscar logs em um índice do Elasticsearch com base em um CPF ou um hash que pode ser transformado em CPF.

Endpoints da API
1. Endpoint de Busca de Logs
GET /search
Este endpoint permite buscar logs no Elasticsearch com base em um CPF ou um hash. Se um hash for fornecido, ele será transformado em CPF e a busca será feita com esse CPF.

Método: GET
Descrição: Busca logs no Elasticsearch com base em um CPF ou um hash. Se um hash for fornecido, ele será transformado em CPF.
Parâmetros:
cpf (opcional): O CPF a ser buscado. Se fornecido, a busca será feita com esse CPF.
hash (opcional): O hash a ser transformado em CPF. Se fornecido, será usado para buscar o CPF correspondente e realizar a busca com esse CPF.
start_timestamp (opcional): Data e hora de início do intervalo de busca no formato ISO8601 (ex: 2024-06-29T00:00:00Z). Se não fornecido, o valor padrão é 2 horas atrás a partir do momento atual.
end_timestamp (opcional): Data e hora de fim do intervalo de busca no formato ISO8601 (ex: 2024-06-29T23:59:59Z). Se não fornecido, o valor padrão é o momento atual.
Resposta:
Código 200 OK: Retorna uma lista de logs que correspondem ao CPF ou ao hash transformado.
Código 400 Bad Request: Se nenhum dos parâmetros cpf ou hash for fornecido ou se os timestamps estiverem no formato incorreto.
Código 404 Not Found: Se um hash for fornecido mas não puder ser transformado em CPF.
Código 500 Internal Server Error: Para erros inesperados ou erros de conexão com o Elasticsearch.
Exemplos de Requisição
Buscar logs por CPF diretamente:

http
Copiar código
GET /search?cpf=12345678900&start_timestamp=2024-06-29T00:00:00Z&end_timestamp=2024-06-29T23:59:59Z
Transformar hash em CPF e buscar logs:

http
Copiar código
GET /search?hash=abc123&start_timestamp=2024-06-29T00:00:00Z&end_timestamp=2024-06-29T23:59:59Z
Exemplo de Resposta
json
Copiar código
[
    {
        "user": "12345678900",
        "correlationId": "correlation-id-123",
        "fase": 1,
        "group": "service-id-456",
        "component": "source-id-789",
        "httpStatus": "200",
        "result": "success",
        "timestamp": "2024-06-29T12:34:56Z"
    },
    {
        "user": "12345678900",
        "correlationId": "correlation-id-124",
        "fase": 2,
        "group": "service-id-457",
        "component": "source-id-790",
        "httpStatus": "404",
        "result": "failure",
        "timestamp": "2024-06-29T12:45:56Z"
    }
]
2. Endpoint de Transformação de Hash para CPF
GET /transform/<hash_value>
Este endpoint permite transformar um hash em um CPF.

Método: GET
Descrição: Transforma um hash em um CPF usando um serviço externo (Swagger).
Parâmetros:
hash_value: O hash que será transformado em CPF.
Resposta:
Código 200 OK: Retorna o CPF correspondente ao hash.
Código 404 Not Found: Se o hash não puder ser transformado em CPF.
Exemplos de Requisição
Transformar um hash em CPF:

http
Copiar código
GET /transform/abc123
Exemplo de Resposta
json
Copiar código
{
    "cpf": "12345678900"
}
Como Executar
1. Configuração
Antes de executar o projeto, defina as variáveis de ambiente necessárias:

bash
Copiar código
export ELASTICSEARCH_URL="http://localhost:9200"
export ELASTICSEARCH_TOKEN="your-elasticsearch-token"
export SWAGGER_URL="http://swagger-url/api/"
export SWAGGER_USER="swagger-user"
export SWAGGER_PASS="swagger-pass"
2. Instalação das Dependências
Certifique-se de ter as dependências instaladas. Use o pip para instalar os pacotes necessários:

bash
Copiar código
pip install Flask Flask-RESTful elasticsearch requests
3. Executar a Aplicação
Inicie o servidor Flask com o seguinte comando:

bash
Copiar código
python app.py
O servidor estará disponível em http://localhost:5000.

